from dialog import Dialog
from helper import Helper

ID_INPUT_UNSORTED = Helper.random_id()
ID_BUTTON_FILL_RANDOMS = Helper.random_id()
ID_INPUT_SORTED = Helper.random_id()
ID_LABEL_INPUTERROR = Helper.random_id()
ID_LABEL_SORTERROR = Helper.random_id()
ID_BUTTON_START = Helper.random_id()
ID_COMBO_METHOD = Helper.random_id()
ID_COMBO_ORDER = Helper.random_id()
ID_LABEL_DURATION = Helper.random_id()

class SortDialog(Dialog):
    """
    –ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º tkinter.

    –ê—Ç—Ä–∏–±—É—Ç—ã:
    ----------
    on_sort_listener : function
        –§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.
    methods : list
        –°–ø–∏—Å–æ–∫ –º–µ—Ç–æ–¥–æ–≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.
    orders : list
        –°–ø–∏—Å–æ–∫ –ø–æ—Ä—è–¥–∫–æ–≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.

    –ú–µ—Ç–æ–¥—ã:
    -------
    __init__(self, on_sort_listener, methods, orders):
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞—Å—Å–∞ SortDialog —Å –∑–∞–¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –∏ —Å–ø–∏—Å–∫–∞–º–∏ –º–µ—Ç–æ–¥–æ–≤ –∏ –ø–æ—Ä—è–¥–∫–æ–≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.
        
    run(self):
        –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.
        
    __event_listener(self, event, id, event_data):
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (–Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫, –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –∏ —Ç.–¥.).
    """
    
    def __init__(self, on_sort_listener, methods, orders):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–ª–∞—Å—Å SortDialog, —Å–æ–∑–¥–∞–≤–∞—è —à–∞–±–ª–æ–Ω –¥–∏–∞–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏.

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        ----------
        on_sort_listener : function
            –§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.
        methods : list
            –°–ø–∏—Å–æ–∫ –º–µ—Ç–æ–¥–æ–≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.
        orders : list
            –°–ø–∏—Å–æ–∫ –ø–æ—Ä—è–¥–∫–æ–≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.
        """
        super().__init__()
        self.on_sort_listener = on_sort_listener 
        template = f'''
        size, XXL, 0, 0
        header, üöÄSORT_TIME, 1
        tab, ST, 0, 0
        label, unsorted array:, 2
        input, not_sorted, {ID_INPUT_UNSORTED}
        slabel, , {ID_LABEL_INPUTERROR}
        button, fill with 1000 randoms, {ID_BUTTON_FILL_RANDOMS}
        separator, 0, 0
        combo, 1, {ID_COMBO_METHOD},{','.join(['method: ' + str(x) for x in methods])}
        combo, 1, {ID_COMBO_ORDER},{','.join(['order: ' + str(x) for x in orders])}
        button, start, {ID_BUTTON_START}
        slabel, , {ID_LABEL_SORTERROR}
        separator, 0, 0
        label, sorted array:, 7
        input, sorted, {ID_INPUT_SORTED}
        xlabel, , {ID_LABEL_DURATION},

        tab, AB, 0, 1
        xlabel, SORT_TIME, 0, 0
        label, assignment for python course, 0, 0
        label, used: tkinter, 0, 0 
        label, date: XX.11.2024, 0, 0
        urlbutton, https://github.com/abrosimov-d/sort_time, 0, 0
        '''
        super().template(template)
        super().set_event_listener(self.__event_listener)

    def run(self):
        """
        –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.
        """
        super().run()
    
    def __event_listener(self, event, id, event_data):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (–Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫, –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –∏ —Ç.–¥.).

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        ----------
        event : str
            –¢–∏–ø —Å–æ–±—ã—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'click', 'key', 'close').
        id : int
            –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞, –≤—ã–∑–≤–∞–≤—à–µ–≥–æ —Å–æ–±—ã—Ç–∏–µ.
        event_data : dict
            –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è.

        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        ----------
        bool
            True, –µ—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ 'close' —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ.
        """
        
        if event =='click' and id == ID_BUTTON_START:
            self.set_text_by_id(ID_INPUT_SORTED, '')
            self.set_text_by_id(ID_LABEL_DURATION, '')
            data = {}
            data['method'] = self.get_selected_index_by_id(ID_COMBO_METHOD)
            data['order'] = self.get_selected_index_by_id(ID_COMBO_ORDER)
            data['array'] = self.get_text_by_id(ID_INPUT_UNSORTED)
            result = self.on_sort_listener(data)
            if 'error' in result:
                self.set_text_by_id(ID_LABEL_SORTERROR, result['error'])
            else:
                self.set_text_by_id(ID_INPUT_SORTED, result['array'])
                self.set_text_by_id(ID_LABEL_DURATION, f"{result['duration']} ¬µs")

        if event == 'key' and id == ID_INPUT_UNSORTED:
            self.set_text_by_id(ID_LABEL_INPUTERROR, '')
            self.set_text_by_id(ID_LABEL_SORTERROR, '')
            data = {}
            data['array'] = self.get_text_by_id(ID_INPUT_UNSORTED)
            result = self.on_sort_listener(data)
            if 'error' in result:
                self.set_text_by_id(ID_LABEL_INPUTERROR, 'invalid array')
            else:
                self.set_text_by_id(ID_LABEL_INPUTERROR, '')
            self.set_text_by_id(ID_INPUT_SORTED, '')
            self.set_text_by_id(ID_LABEL_DURATION, '')
            self.set_enable_by_id(ID_BUTTON_START, 'error' not in result)
        
        if event == 'click' and id == ID_BUTTON_FILL_RANDOMS:
            data = {}
            result = self.on_sort_listener(data)
            self.set_text_by_id(ID_INPUT_UNSORTED, result['array'])
            self.set_text_by_id(ID_LABEL_INPUTERROR, '')
            self.set_text_by_id(ID_LABEL_SORTERROR, '')
            self.set_text_by_id(ID_LABEL_DURATION, '')
            self.set_text_by_id(ID_INPUT_SORTED, '')
            self.set_enable_by_id(ID_BUTTON_START, 'error' not in result)

        if event == 'close':
            return True
